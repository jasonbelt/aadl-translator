------------------------------------------------------------------------------+
-- NoninPulseOx.aadl - Corresponding AADL model of the Nonin PulseOx DML model
--   in project mdcf.dms.examplev2.product.
--
-- Author: Stephen C. Barrett (scbarrett@ksu.edu)
--         Department of Computing & Information Sciences
--               
-- Licensed Material - Property of Kansas State University.               
------------------------------------------------------------------------------+
-- Exchanges and their payload types are defined directly in this code. 
------------------------------------------------------------------------------+


package NoninPulseOx
public
  with MAP_Properties;
  with MDCF_Data_Props, MDCF_Comm_Props;
  with MDCF_Types;


------------------------------------------------------------------------------+
-- The entire Pulse Ox medical device unit.
------------------------------------------------------------------------------+
system NoninPulseOx
-- The unit's interface.
end NoninPulseOx;

system implementation NoninPulseOx.impl
subcomponents
  -- The unit's VMDs...
  pulseox: abstract PulseOxVmd;

properties
--   The unit's meta-data...
  MDCF_Data_Props::IEEE11073_MDC_ATTR_SYS_TYPE => "Nonin PO";
  
  MDCF_Data_Props::ICE_ManufacturerModel => [
  	MDC_ATTR_ID_MODEL => [
  	  manufacturer => "Nonin";
  	  model_number => "Onyx II X5551122";
  	];
  	credentials => ("cert1", "cert2");
  ];
end NoninPulseOx.impl;


------------------------------------------------------------------------------+
-- Pulse Ox unit's virtual medical devices.
------------------------------------------------------------------------------+
abstract PulseOxVmd  -- More than an AADL device, so make abstract.
-- Features consist of the unit's payload-exchange "bundles".
features
  -- Device status of vmd through requester-responser communication pair. 
  Status_req: in event data port;  -- Trigger for output from requester.
  Status_res: out event data port MDCF_Types::Status {  -- Responder output.
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;
  };
  
 
  -- Exceeded limit in SpO2.Alerts sub-channel through publisher-subscriber communication pair. 
  Spo2_Alerts_Limit_pub: out event data port MDCF_Types::LimitAlert {  -- Publisher output.     
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;
  };
  
  
  -- SpO2 numeric in Spo2.Metrics sub-channel through requester-responser communication pair. 
  Spo2_Metric_Spo2Num_req: in event data port;  -- Trigger for output from requester.
  Spo2_Metric_Spo2Num_res: out event data port MDCF_Types::SpO2 {  -- Responder output.  
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;
  };
  dummy_num_in: in event data port MDCF_Types::SpO2;  -- For demonstrating connections.


  -- SpO2 numeric in Spo2.Metrics sub-channel through publisher-subscriber communication pair. 
  Spo2_Metric_Spo2Num_pub: out event data port MDCF_Types::SpO2 {  -- Publisher output.      
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;
  };

  
  -- >>> Demonstration of a single sub-channel having multiple versions of a metric. <<<
  -- Alternate SpO2 numeric in Spo2.Metrics sub-channel through requester-responser communication pair. 
  Spo2_Metric_Spo2NumAlt_req: in event data port;  -- Trigger for output from requester.
  Spo2_Metric_Spo2NumAlt_res: out event data port MDCF_Types::SpO2 {  -- Responder output.   
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;
  };


  -- Alternate SpO2 numeric in Spo2.Metrics sub-channel through publisher-subscriber communication pair. 
  Spo2_Metric_Spo2NumAlt_pub: out event data port MDCF_Types::SpO2 {  -- Publisher output.      
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;
  };
  
  
  -- Exceeded limit in SpO2.Metrics.Alerts sub-sub-channel through publisher-subscriber communication pair. 
  Spo2_Metrics_Alerts_Limit_pub: out event data port MDCF_Types::LimitAlert {  -- Publisher output.     
  -- Properties found in AADL subset:  
    MAP_Properties::Output_Rate => 100 ms .. 300 ms;

  };
  
  
flows
  Spo2_Metric_Spo2Num_res_flow: flow source Spo2_Metric_Spo2Num_res;
end PulseOxVmd;


abstract implementation PulseOxVmd.impl  -- Implement an abstract component?
connections
  -- Demonstrate access to inner members. Internal connection flows in to out. 
  csp: port dummy_num_in -> Spo2_Metric_Spo2Num_res {
    MAP_Properties::Channel_Delay => 50 ms;
  };
end PulseOxVmd.impl;


end NoninPulseOx;