report(model, name, timestamp) ::=<<
<header(name, timestamp)>
<tblOfContents()>
<fundamentals(model, name)>
<decomposition(model)>
<processModel(model)>
<unsafeInteractions(model)>
>>

header(name, timestamp) ::=<<
# PLACEHOLDER HA NAME: Analysis of <name>

*This report was generated by the [MDCF Architect](http://santoslab.org/pub/mdcf-architect/) on <timestamp>*

>>

tblOfContents() ::=<<
## Table of Contents

1. [Fundamentals](#fundamentals)
2. [Decomposition](#decomposition)
	1. [Control Structure](#control-structure)
	2. [Components](#components)
	3. [Connections](#connections)
3. [Process Model](#process-model)
4. [Unsafe Interactions](#unsafe-interactions)
	1. [Successor Dangers](#successor-dangers)
	2. [Manifestions](#manifestations)
	3. [Externally Caused Dangers](#externally-caused-dangers)
5. [Internal Faults](#internal-faults)
	1. [Faults Not Considered](#faults-not-considered)
	2. [Internally Caused Dangers](#faults-not-considered)

>>

fundamentals(model, name) ::=<<
## Fundamentals

* Element Name: <name>
* Element Type: <model.name>
* Successor Link Names:
	<model.sendPorts.keys:{k | <linkName(k, model.sendPorts.(k))>
}>* Predecessor Link Names:
	<model.receivePorts.keys:{k | <linkName(k, model.receivePorts.(k))>
}>* Classification: <model.componentTypeAsString>

>>

decomposition(model) ::=<<
## Decomposition

### Control Structure

### Components

<model.children.keys:{k | <elementTocEntry(k)>
}>
### Connections

<model.channels.keys:{k | <elementTocEntry(k)>
}>
>>

processModel(model) ::=<<

## Process Model

<model.processModel.values : {v | <processVariable(v)>
}>
>>

processVariable(model) ::=<<
* <model.name> (<model.type>): <if(model.numeric)><model.minVal> -- <model.maxVal> <endif><model.units>
>>

unsafeInteractions(model) ::=<<

## Unsafe Interactions

### Successor Dangers

<model.sendPorts.values:{p | <succDanger(p)>
}>

### Manifestations

<model.receivePorts.values:{p | <manifestation(p)>
}>

>>

linkName(name, model) ::=<<
* <name> (<model.type>)
>>

elementTocEntry(elemName) ::=<<
#. [<elemName>](<elemName; format="MarkdownInterLink">)
>>

succDanger(portModel) ::=<<
* <portModel.name>: {<portModel.propagatableErrors.values :{pe | <pe.name>}; separator=", ">}
>>

manifestation(portModel) ::=<<
* <portModel.name>: {<portModel.propagatableErrors.values :{pe | <if(pe.sunk)>~~<endif><pe.name> (<pe.manifestationName>)<if(pe.sunk)>~~<endif>}; separator=", ">}
>>